{"ast":null,"code":"var _jsxFileName = \"D:\\\\Shashini\\\\Assignments\\\\Assignments\\\\2025\\\\NSBM\\\\Plymouth\\\\Keith-2\\\\luxury_car_rental\\\\Frontend\\\\src\\\\components\\\\AuthModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\"); // Required for accessibility\n\nconst AuthModal = ({\n  isOpen,\n  onClose,\n  onLogin\n}) => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    role_name: \"\"\n  });\n  const [roles, setRoles] = useState([]); // To store the roles fetched from the backend\n\n  const [message, setMessage] = useState(\"\");\n\n  // Fetch roles from backend\n  useEffect(() => {\n    const fetchRoles = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/roles\");\n        setRoles(response.data); // Assume API returns an array of roles\n      } catch (error) {\n        console.error(\"Error fetching roles:\", error);\n        setMessage(\"Error fetching roles.\");\n      }\n    };\n    fetchRoles();\n\n    // Clear message when modal is closed\n    if (!isOpen) {\n      setMessage(\"\");\n    }\n  }, [isOpen]);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  // Clear the message whenever the modal is closed\n  useEffect(() => {\n    if (!isOpen) {\n      setMessage(\"\"); // Reset message when modal is closed\n    }\n  }, [isOpen]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const url = isLogin ? \"http://localhost:5000/api/auth/login\" : \"http://localhost:5000/api/auth/register\";\n\n      // Include role in the form data (for registration)\n      const formDataWithRole = isLogin ? formData : {\n        ...formData,\n        role: formData.role\n      };\n      const response = await axios.post(url, formDataWithRole);\n      setMessage(isLogin ? \"Login successful!\" : \"Registration successful!\");\n      localStorage.setItem(\"user\", JSON.stringify(response.data)); // Save token\n\n      onLogin(response.data);\n      handleLogin();\n      // Call onLogin to update state in App.js\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Something went wrong!\");\n    }\n  };\n  function handleLogin() {\n    JSON.parse(localStorage.getItem(\"user\"));\n  }\n  const closeModal = () => {\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: closeModal,\n    className: \"modal-content\",\n    overlayClassName: \"modal-overlay\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [!isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Full Name\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"role\",\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          selected: true,\n          children: \"Select a job role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 5\n        }, this), roles.length > 0 ? roles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: role.role_name,\n          children: role.role_name.charAt(0).toUpperCase() + role.role_name.slice(1)\n        }, role.job_role_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Loading roles...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLogin ? \"Login\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => setIsLogin(!isLogin),\n      className: \"toggle-auth\",\n      children: isLogin ? \"Don't have an account? Sign up\" : \"Already have an account? Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthModal, \"Q1q9vRVHWhv/UsOiGYpgJ1uyl+A=\");\n_c = AuthModal;\nexport default AuthModal;\nvar _c;\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","axios","jsxDEV","_jsxDEV","setAppElement","AuthModal","isOpen","onClose","onLogin","_s","isLogin","setIsLogin","formData","setFormData","name","email","password","role_name","roles","setRoles","message","setMessage","fetchRoles","response","get","data","error","console","handleChange","e","target","value","handleSubmit","preventDefault","url","formDataWithRole","role","post","localStorage","setItem","JSON","stringify","handleLogin","_error$response","_error$response$data","parse","getItem","closeModal","onRequestClose","className","overlayClassName","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","disabled","selected","length","map","charAt","toUpperCase","slice","job_role_id","onClick","_c","$RefreshReg$"],"sources":["D:/Shashini/Assignments/Assignments/2025/NSBM/Plymouth/Keith-2/luxury_car_rental/Frontend/src/components/AuthModal.js"],"sourcesContent":["import React, { useState,useEffect  } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport axios from \"axios\";\r\n\r\nModal.setAppElement(\"#root\"); // Required for accessibility\r\n\r\nconst AuthModal = ({ isOpen, onClose, onLogin }) => {\r\n    const [isLogin, setIsLogin] = useState(true);\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        role_name: \"\",\r\n    });\r\n    const [roles, setRoles] = useState([]);  // To store the roles fetched from the backend\r\n\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n     // Fetch roles from backend\r\n     useEffect(() => {\r\n        const fetchRoles = async () => {\r\n            try {\r\n                const response = await axios.get(\"http://localhost:5000/api/roles\");\r\n                setRoles(response.data);  // Assume API returns an array of roles\r\n            } catch (error) {\r\n                console.error(\"Error fetching roles:\", error);\r\n                setMessage(\"Error fetching roles.\");\r\n            }\r\n        };\r\n        fetchRoles();\r\n\r\n        // Clear message when modal is closed\r\n        if (!isOpen) {\r\n            setMessage(\"\");\r\n        }\r\n    }, [isOpen]);\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n     // Clear the message whenever the modal is closed\r\n     useEffect(() => {\r\n        if (!isOpen) {\r\n            setMessage(\"\"); // Reset message when modal is closed\r\n        }\r\n    }, [isOpen]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const url = isLogin ? \"http://localhost:5000/api/auth/login\" : \"http://localhost:5000/api/auth/register\";\r\n            \r\n            // Include role in the form data (for registration)\r\n            const formDataWithRole = isLogin ? formData : { ...formData, role: formData.role }; \r\n    \r\n            const response = await axios.post(url, formDataWithRole);\r\n            setMessage(isLogin ? \"Login successful!\" : \"Registration successful!\");\r\n            localStorage.setItem(\"user\", JSON.stringify(response.data)); // Save token\r\n    \r\n            onLogin(response.data); \r\n            handleLogin();\r\n            // Call onLogin to update state in App.js\r\n        } catch (error) {\r\n            setMessage(error.response?.data?.error || \"Something went wrong!\");\r\n        }\r\n    };\r\n    \r\n\r\n    function handleLogin() {\r\n        JSON.parse(localStorage.getItem(\"user\")); \r\n        \r\n    }\r\n\r\n    const closeModal = () => {       \r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} onRequestClose={closeModal} className=\"modal-content\" overlayClassName=\"modal-overlay\">\r\n            <h2>{isLogin ? \"Login\" : \"Sign Up\"}</h2>\r\n            {message && <p className=\"message\">{message}</p>}\r\n            <form onSubmit={handleSubmit}>\r\n                {!isLogin && (\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Full Name\" onChange={handleChange} required />\r\n                )}\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleChange} required />\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} required />\r\n            \r\n                    <select name=\"role\" onChange={handleChange} required>\r\n    <option value=\"\" disabled selected>\r\n        Select a job role\r\n    </option>\r\n    {roles.length > 0 ? (\r\n        roles.map((role) => (\r\n            <option key={role.job_role_id} value={role.role_name}>\r\n                {role.role_name.charAt(0).toUpperCase() + role.role_name.slice(1)}\r\n            </option>\r\n        ))\r\n    ) : (\r\n        <option>Loading roles...</option>\r\n    )}\r\n</select>\r\n               \r\n                <button type=\"submit\">{isLogin ? \"Login\" : \"Sign Up\"}</button>\r\n            </form>\r\n            <p onClick={() => setIsLogin(!isLogin)} className=\"toggle-auth\">\r\n                {isLogin ? \"Don't have an account? Sign up\" : \"Already have an account? Login\"}\r\n            </p>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AuthModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}