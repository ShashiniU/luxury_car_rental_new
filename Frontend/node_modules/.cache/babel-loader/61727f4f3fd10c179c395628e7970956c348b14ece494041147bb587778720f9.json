{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\Shashini\\\\Assignments\\\\Assignments\\\\2025\\\\NSBM\\\\Plymouth\\\\Keith-2\\\\luxury_car_rental\\\\Frontend\\\\src\\\\components\\\\Admin\\\\OwnerDashboard.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./EmployeeDashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OwnerDashboard = () => {\n  _s();\n  // const [user, setUser] = useState({ name: \"\", email: \"\" });\n  const [car, setCar] = useState({\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    price: \"\",\n    description: \"\",\n    features: \"\",\n    images: [],\n    location: \"\"\n  });\n  const [imageFiles, setImageFiles] = useState([]);\n\n  // useEffect(() => {\n  //   fetchUserDetails();\n  // }, []);\n\n  // const fetchUserDetails = async () => {\n  //   const response = await axios.get(\"http://localhost:5000/api/users/USER_ID\");\n  //   setUser(response.data);\n  // };\n\n  // const updateUserDetails = async () => {\n  //   await axios.put(\"http://localhost:5000/api/users/USER_ID\", user);\n  //   alert(\"User details updated!\");\n  // }\n\n  const addCar = async () => {\n    const formData = new FormData();\n    // Ensure you're correctly passing the data and not double-quoting strings.\n    Object.keys(car).forEach(key => {\n      if (key !== \"images\" && key !== \"features\") {\n        formData.append(key, car[key]); // Directly append non-image data\n      }\n    });\n\n    // For features, ensure it's an actual array\n    if (Array.isArray(car.features)) {\n      formData.append(\"features\", JSON.stringify(car.features)); // Send it as a JSON array string\n    }\n\n    // Append images\n    imageFiles.forEach(file => {\n      formData.append(\"images\", file);\n    });\n    try {\n      await axios.post(\"http://localhost:5000/api/cars/caruploads\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"Car added successfully!\");\n    } catch (e) {\n      alert(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add New Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Brand\",\n      onChange: e => setCar({\n        ...car,\n        brand: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Model\",\n      onChange: e => setCar({\n        ...car,\n        model: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Year\",\n      onChange: e => setCar({\n        ...car,\n        year: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Price\",\n      onChange: e => setCar({\n        ...car,\n        price: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Description\",\n      onChange: e => setCar({\n        ...car,\n        description: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Features (comma separated)\",\n      onChange: e => setCar({\n        ...car,\n        features: e.target.value.split(\",\")\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: e => setImageFiles([...e.target.files])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addCar,\n      children: \"Add Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(OwnerDashboard, \"0Yxq3HV+lYUWG46PyuI7/Eu+i/o=\");\n_c = OwnerDashboard;\nexport default OwnerDashboard;\nvar _c;\n$RefreshReg$(_c, \"OwnerDashboard\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","axios","jsxDEV","_jsxDEV","OwnerDashboard","car","setCar","brand","model","year","price","description","features","images","location","imageFiles","setImageFiles","addCar","formData","FormData","Object","keys","forEach","key","append","Array","isArray","JSON","stringify","file","post","headers","alert","e","children","fileName","lineNumber","columnNumber","type","placeholder","onChange","target","value","split","multiple","files","onClick","_c","$RefreshReg$"],"sources":["D:/Shashini/Assignments/Assignments/2025/NSBM/Plymouth/Keith-2/luxury_car_rental/Frontend/src/components/Admin/OwnerDashboard.js"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport \"./EmployeeDashboard.css\"\r\n\r\n\r\nconst OwnerDashboard = () => {\r\n  // const [user, setUser] = useState({ name: \"\", email: \"\" });\r\n  const [car, setCar] = useState({\r\n    brand: \"\",\r\n    model: \"\",\r\n    year: \"\",\r\n    price: \"\",\r\n    description: \"\",\r\n    features: \"\",\r\n    images: [],\r\n    location: \"\",\r\n  });\r\n  const [imageFiles, setImageFiles] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   fetchUserDetails();\r\n  // }, []);\r\n\r\n  // const fetchUserDetails = async () => {\r\n  //   const response = await axios.get(\"http://localhost:5000/api/users/USER_ID\");\r\n  //   setUser(response.data);\r\n  // };\r\n\r\n  // const updateUserDetails = async () => {\r\n  //   await axios.put(\"http://localhost:5000/api/users/USER_ID\", user);\r\n  //   alert(\"User details updated!\");\r\n  // }\r\n\r\n  const addCar = async () => {\r\n    const formData = new FormData();\r\n   // Ensure you're correctly passing the data and not double-quoting strings.\r\n  Object.keys(car).forEach((key) => {\r\n    if (key !== \"images\" && key !== \"features\") {\r\n      formData.append(key, car[key]);  // Directly append non-image data\r\n    }\r\n  });\r\n\r\n  // For features, ensure it's an actual array\r\n  if (Array.isArray(car.features)) {\r\n    formData.append(\"features\", JSON.stringify(car.features)); // Send it as a JSON array string\r\n  }\r\n\r\n  // Append images\r\n  imageFiles.forEach((file) => {\r\n    formData.append(\"images\", file);\r\n  });\r\n\r\n  try{\r\n    await axios.post(\"http://localhost:5000/api/cars/caruploads\", formData, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n    alert(\"Car added successfully!\");\r\n  }catch(e){\r\n    alert(e);\r\n  }\r\n    \r\n   \r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      {/* <h2>User Dashboard</h2>\r\n      <input type=\"text\" value={user.name} onChange={(e) => setUser({ ...user, name: e.target.value })} />\r\n      <input type=\"email\" value={user.email} onChange={(e) => setUser({ ...user, email: e.target.value })} />\r\n      <button onClick={updateUserDetails}>Update Profile</button> */}\r\n\r\n      <h3>Add New Car</h3>\r\n      <input type=\"text\" placeholder=\"Brand\" onChange={(e) => setCar({ ...car, brand: e.target.value })} />\r\n      <input type=\"text\" placeholder=\"Model\" onChange={(e) => setCar({ ...car, model: e.target.value })} />\r\n      <input type=\"number\" placeholder=\"Year\" onChange={(e) => setCar({ ...car, year: e.target.value })} />\r\n      <input type=\"number\" placeholder=\"Price\" onChange={(e) => setCar({ ...car, price: e.target.value })} />\r\n      <textarea placeholder=\"Description\" onChange={(e) => setCar({ ...car, description: e.target.value })} />\r\n      <input type=\"text\" placeholder=\"Features (comma separated)\" onChange={(e) => setCar({ ...car, features: e.target.value.split(\",\") })} />\r\n      <input type=\"file\" multiple onChange={(e) => setImageFiles([...e.target.files])} />\r\n      <button onClick={addCar}>Add Car</button>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default  OwnerDashboard \r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}