{"ast":null,"code":"var _jsxFileName = \"D:\\\\Shashini\\\\Assignments\\\\Assignments\\\\2025\\\\NSBM\\\\Plymouth\\\\Keith-2\\\\luxury_car_rental\\\\Frontend\\\\src\\\\components\\\\LoginValidation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\"); // Required for accessibility\n\nconst AuthModal = ({\n  isOpen,\n  onClose,\n  onLogin\n}) => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  // Clear the message whenever the modal is closed\n  useEffect(() => {\n    if (!isOpen) {\n      setMessage(\"\"); // Reset message when modal is closed\n    }\n  }, [isOpen]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(isLogin ? \"http://localhost:5000/api/auth/login\" : \"http://localhost:5000/api/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.msg || isLogin ? \"Login Failed!\" : \"Registration failed\");\n      }\n      setMessage(isLogin ? \"Login successful!\" : \"Registration successful!\");\n      localStorage.setItem(\"user\", JSON.stringify(response.data)); // Save token\n      onLogin(response.data);\n      handleLogin();\n    } catch (error) {\n      setMessage(error.message || \"Something went wrong!\");\n    }\n  };\n  function handleLogin() {\n    JSON.parse(localStorage.getItem(\"user\"));\n  }\n  const closeModal = () => {\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: closeModal,\n    className: \"modal-content\",\n    overlayClassName: \"modal-overlay\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [!isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Full Name\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLogin ? \"Login\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => setIsLogin(!isLogin),\n      className: \"toggle-auth\",\n      children: isLogin ? \"Don't have an account? Sign up\" : \"Already have an account? Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthModal, \"EsExos9wDIXTeVXw3vmSoowGFXY=\");\n_c = AuthModal;\nexport default AuthModal;\nvar _c;\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","jsxDEV","_jsxDEV","setAppElement","AuthModal","isOpen","onClose","onLogin","_s","isLogin","setIsLogin","formData","setFormData","name","email","password","message","setMessage","handleChange","e","target","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","msg","localStorage","setItem","handleLogin","error","parse","getItem","closeModal","onRequestClose","className","overlayClassName","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["D:/Shashini/Assignments/Assignments/2025/NSBM/Plymouth/Keith-2/luxury_car_rental/Frontend/src/components/LoginValidation.js"],"sourcesContent":["import React, { useState,useEffect  } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nModal.setAppElement(\"#root\"); // Required for accessibility\r\n\r\nconst AuthModal = ({ isOpen, onClose, onLogin }) => {\r\n    const [isLogin, setIsLogin] = useState(true);\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n       \r\n    });\r\n\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n     // Clear the message whenever the modal is closed\r\n     useEffect(() => {\r\n        if (!isOpen) {\r\n            setMessage(\"\"); // Reset message when modal is closed\r\n        }\r\n    }, [isOpen]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n                        \r\n            const response = await \r\n            fetch(isLogin ? \r\n                \"http://localhost:5000/api/auth/login\" : \"http://localhost:5000/api/auth/register\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(formData),\r\n              })\r\n              \r\n        \r\n              const data =await response.json()\r\n              if (!response.ok) {\r\n                throw new Error(data.msg || isLogin ? \"Login Failed!\" :\"Registration failed\");\r\n              }\r\n              setMessage(isLogin ? \"Login successful!\" : \"Registration successful!\");\r\n              localStorage.setItem(\"user\", JSON.stringify(response.data)); // Save token\r\n              onLogin(response.data); \r\n              handleLogin();\r\n        } catch (error) {\r\n            setMessage(error.message || \"Something went wrong!\");\r\n        }\r\n    };\r\n    \r\n\r\n    function handleLogin() {\r\n        JSON.parse(localStorage.getItem(\"user\")); \r\n        \r\n    }\r\n\r\n    const closeModal = () => {       \r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} onRequestClose={closeModal} className=\"modal-content\" overlayClassName=\"modal-overlay\">\r\n            <h2>{isLogin ? \"Login\" : \"Sign Up\"}</h2>\r\n            {message && <p className=\"message\">{message}</p>}\r\n            <form onSubmit={handleSubmit}>\r\n                {!isLogin && (\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Full Name\" onChange={handleChange} required />\r\n                )}\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleChange} required />\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} required />\r\n            \r\n                   \r\n               \r\n                <button type=\"submit\">{isLogin ? \"Login\" : \"Sign Up\"}</button>\r\n            </form>\r\n            <p onClick={() => setIsLogin(!isLogin)} className=\"toggle-auth\">\r\n                {isLogin ? \"Don't have an account? Sign up\" : \"Already have an account? Login\"}\r\n            </p>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AuthModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}