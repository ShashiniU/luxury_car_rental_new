{"ast":null,"code":"var _jsxFileName = \"D:\\\\Shashini\\\\Assignments\\\\Assignments\\\\2025\\\\NSBM\\\\Plymouth\\\\Keith-2\\\\luxury_car_rental\\\\Frontend\\\\src\\\\components\\\\LoginValidation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\"); // Required for accessibility\n\nconst AuthModal = ({\n  isOpen,\n  onClose,\n  onLogin\n}) => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [roles, setRoles] = useState([]); // To store the roles fetched from the backend\n  const [message, setMessage] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    role: \"\"\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  // Clear the message whenever the modal is closed\n  useEffect(() => {\n    if (!isOpen) {\n      setMessage(\"\"); // Reset message when modal is closed\n    }\n  }, [isOpen]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(isLogin ? \"http://localhost:5000/api/auth/login\" : \"http://localhost:5000/api/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.msg || isLogin ? \"Login Failed!\" : \"Registration failed\");\n      }\n      setMessage(isLogin ? \"Login successful!\" : \"Registration successful!\");\n      localStorage.setItem(\"user\", JSON.stringify(data.user)); // Save token\n      onLogin(data.user);\n      handleLogin();\n    } catch (error) {\n      setMessage(error.message || \"Something went wrong!\");\n    }\n  };\n  function handleLogin() {\n    JSON.parse(localStorage.getItem(\"user\"));\n  }\n  const closeModal = () => {\n    onClose();\n  };\n  useEffect(() => {\n    // Set hardcoded roles\n    setRoles([\"owner\", \"renter\"]);\n\n    // Clear message when modal is closed\n    if (!isOpen) {\n      setMessage(\"\");\n    }\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: closeModal,\n    className: \"modal-content\",\n    overlayClassName: \"modal-overlay\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [!isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Full Name\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"role\",\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          selected: true,\n          children: \"Select a job role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 24\n        }, this), roles.length > 0 ? roles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: role,\n          children: [role.charAt(0).toUpperCase() + role.slice(1), \"  \"]\n        }, role, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 32\n        }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Loading roles...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLogin ? \"Login\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => setIsLogin(!isLogin),\n      className: \"toggle-auth\",\n      children: isLogin ? \"Don't have an account? Sign up\" : \"Already have an account? Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthModal, \"34MZ0veIZyRwdxYfShfQko2sIlQ=\");\n_c = AuthModal;\nexport default AuthModal;\nvar _c;\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","jsxDEV","_jsxDEV","setAppElement","AuthModal","isOpen","onClose","onLogin","_s","isLogin","setIsLogin","roles","setRoles","message","setMessage","formData","setFormData","name","email","password","role","handleChange","e","target","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","msg","localStorage","setItem","user","handleLogin","error","parse","getItem","closeModal","onRequestClose","className","overlayClassName","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","disabled","selected","length","map","charAt","toUpperCase","slice","onClick","_c","$RefreshReg$"],"sources":["D:/Shashini/Assignments/Assignments/2025/NSBM/Plymouth/Keith-2/luxury_car_rental/Frontend/src/components/LoginValidation.js"],"sourcesContent":["import React, { useState,useEffect  } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nModal.setAppElement(\"#root\"); // Required for accessibility\r\n\r\nconst AuthModal = ({ isOpen, onClose, onLogin }) => {\r\n    const [isLogin, setIsLogin] = useState(true);\r\n    const [roles, setRoles] = useState([]);  // To store the roles fetched from the backend\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        role: \"\",\r\n       \r\n    });\r\n\r\n    \r\n\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n     // Clear the message whenever the modal is closed\r\n     useEffect(() => {\r\n        if (!isOpen) {\r\n            setMessage(\"\"); // Reset message when modal is closed\r\n        }\r\n    }, [isOpen]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        \r\n        e.preventDefault();\r\n        try {\r\n                        \r\n            const response = await \r\n            fetch(isLogin ? \r\n                \"http://localhost:5000/api/auth/login\" : \"http://localhost:5000/api/auth/register\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(formData),\r\n              })\r\n              \r\n        \r\n              const data =await response.json()\r\n              if (!response.ok) {\r\n                throw new Error(data.msg || isLogin ? \"Login Failed!\" :\"Registration failed\");\r\n              }\r\n              setMessage(isLogin ? \"Login successful!\" : \"Registration successful!\");\r\n              localStorage.setItem(\"user\", JSON.stringify(data.user)); // Save token\r\n              onLogin(data.user); \r\n              handleLogin();\r\n        } catch (error) {\r\n            setMessage(error.message || \"Something went wrong!\");\r\n        }\r\n    };\r\n    \r\n\r\n    function handleLogin() {\r\n        JSON.parse(localStorage.getItem(\"user\")); \r\n        \r\n    }\r\n\r\n    const closeModal = () => {       \r\n        onClose();\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Set hardcoded roles\r\n        setRoles([\"owner\", \"renter\"]);\r\n    \r\n        // Clear message when modal is closed\r\n        if (!isOpen) {\r\n            setMessage(\"\");\r\n        }\r\n    }, [isOpen]);\r\n    \r\n\r\n    return (\r\n        <Modal isOpen={isOpen} onRequestClose={closeModal} className=\"modal-content\" overlayClassName=\"modal-overlay\">\r\n            <h2>{isLogin ? \"Login\" : \"Sign Up\"}</h2>\r\n            {message && <p className=\"message\">{message}</p>}\r\n            <form onSubmit={handleSubmit}>\r\n                {!isLogin && (\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Full Name\" onChange={handleChange} required />\r\n                )}\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleChange} required />\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} required />\r\n                {!isLogin && (\r\n                       <select name=\"role\" onChange={handleChange} required>\r\n                       <option value=\"\" disabled selected>\r\n                           Select a job role\r\n                       </option>\r\n                       {roles.length > 0 ? (\r\n                           roles.map((role) => (\r\n                               <option key={role} value={role}>\r\n                                   {role.charAt(0).toUpperCase() + role.slice(1)}  {/* Capitalize for display */}\r\n                               </option>\r\n                           ))\r\n                       ) : (\r\n                           <option>Loading roles...</option>\r\n                       )}\r\n                   </select>\r\n                )}\r\n             \r\n   \r\n                <button type=\"submit\">{isLogin ? \"Login\" : \"Sign Up\"}</button>\r\n            </form>\r\n            <p onClick={() => setIsLogin(!isLogin)} className=\"toggle-auth\">\r\n                {isLogin ? \"Don't have an account? Sign up\" : \"Already have an account? Login\"}\r\n            </p>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AuthModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}